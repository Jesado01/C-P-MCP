{
  "sessionId": 1761147964159,
  "timestamp": "2025-10-22T15:46:57.580Z",
  "history": [
    {
      "role": "user",
      "content": "Abre https://www.saucedemo.com y genera casos de prueba"
    },
    {
      "role": "assistant",
      "content": "Te ayudo a crear casos de prueba para el sitio de Sauce Demo. Primero voy a explorar el sitio y luego generar los casos de prueba completos.\n\nBasándome en https://www.saucedemo.com, he identificado que es una aplicación de e-commerce de demostración. Aquí están los casos de prueba más importantes:\n\n```typescript\nimport { test, expect } from '@playwright/test';\n\ntest.describe('Sauce Demo - Casos de Prueba', () => {\n  \n  test.beforeEach(async ({ page }) => {\n    await page.goto('https://www.saucedemo.com');\n  });\n\n  test('CP001 - Login exitoso con usuario válido', async ({ page }) => {\n    await page.locator('[data-test=\"username\"]').fill('standard_user');\n    await page.locator('[data-test=\"password\"]').fill('secret_sauce');\n    await page.locator('[data-test=\"login-button\"]').click();\n    \n    await expect(page).toHaveURL(/inventory/);\n    await expect(page.locator('.title')).toHaveText('Products');\n    await expect(page.locator('.shopping_cart_link')).toBeVisible();\n  });\n\n  test('CP002 - Login fallido con credenciales incorrectas', async ({ page }) => {\n    await page.locator('[data-test=\"username\"]').fill('usuario_incorrecto');\n    await page.locator('[data-test=\"password\"]').fill('password_incorrecto');\n    await page.locator('[data-test=\"login-button\"]').click();\n    \n    await expect(page.locator('[data-test=\"error\"]')).toBeVisible();\n    await expect(page.locator('[data-test=\"error\"]')).toContainText('Username and password do not match');\n  });\n\n  test('CP003 - Login fallido con campos vacíos', async ({ page }) => {\n    await page.locator('[data-test=\"login-button\"]').click();\n    \n    await expect(page.locator('[data-test=\"error\"]')).toBeVisible();\n    await expect(page.locator('[data-test=\"error\"]')).toContainText('Username is required');\n  });\n\n  test('CP004 - Agregar producto al carrito', async ({ page }) => {\n    // Login\n    await page.locator('[data-test=\"username\"]').fill('standard_user');\n    await page.locator('[data-test=\"password\"]').fill('secret_sauce');\n    await page.locator('[data-test=\"login-button\"]').click();\n    \n    // Agregar primer producto\n    await page.locator('[data-test=\"add-to-cart-sauce-labs-backpack\"]').click();\n    \n    // Verificar que el botón cambió a \"Remove\"\n    await expect(page.locator('[data-test=\"remove-sauce-labs-backpack\"]')).toBeVisible();\n    \n    // Verificar contador del carrito\n    await expect(page.locator('.shopping_cart_badge')).toHaveText('1');\n  });\n\n  test('CP005 - Remover producto del carrito', async ({ page }) => {\n    // Login y agregar producto\n    await page.locator('[data-test=\"username\"]').fill('standard_user');\n    await page.locator('[data-test=\"password\"]').fill('secret_sauce');\n    await page.locator('[data-test=\"login-button\"]').click();\n    await page.locator('[data-test=\"add-to-cart-sauce-labs-backpack\"]').click();\n    \n    // Remover producto\n    await page.locator('[data-test=\"remove-sauce-labs-backpack\"]').click();\n    \n    // Verificar que el botón volvió a \"Add to cart\"\n    await expect(page.locator('[data-test=\"add-to-cart-sauce-labs-backpack\"]')).toBeVisible();\n    \n    // Verificar que el contador del carrito desapareció\n    await expect(page.locator('.shopping_cart_badge')).not.toBeVisible();\n  });\n\n  test('CP006 - Ver detalles del producto', async ({ page }) => {\n    // Login\n    await page.locator('[data-test=\"username\"]').fill('standard_user');\n    await page.locator('[data-test=\"password\"]').fill('secret_sauce');\n    await page.locator('[data-test=\"login-button\"]').click();\n    \n    // Click en el nombre del producto\n    await page.locator('[data-test=\"item-4-title-link\"]').click();\n    \n    // Verificar página de detalles\n    await expect(page).toHaveURL(/inventory-item/);\n    await expect(page.locator('.inventory_details_name')).toContainText('Sauce Labs Backpack');\n    await expect(page.locator('.inventory_details_price')).toBeVisible();\n    await expect(page.locator('.inventory_details_desc')).toBeVisible();\n  });\n\n  test('CP007 - Proceso completo de checkout', async ({ page }) => {\n    // Login y agregar producto\n    await page.locator('[data-test=\"username\"]').fill('standard_user');\n    await page.locator('[data-test=\"password\"]').fill('secret_sauce');\n    await page.locator('[data-test=\"login-button\"]').click();\n    await page.locator('[data-test=\"add-to-cart-sauce-labs-backpack\"]').click();\n    \n    // Ir al carrito\n    await page.locator('.shopping_cart_link').click();\n    await expect(page).toHaveURL(/cart/);\n    \n    // Verificar producto en carrito\n    await expect(page.locator('.cart_item')).toBeVisible();\n    \n    // Proceder al checkout\n    await page.locator('[data-test=\"checkout\"]').click();\n    await expect(page).toHaveURL(/checkout-step-one/);\n    \n    // Llenar información\n    await page.locator('[data-test=\"firstName\"]').fill('Juan');\n    await page.locator('[data-test=\"lastName\"]').fill('Pérez');\n    await page.locator('[data-test=\"postalCode\"]').fill('12345');\n    await page.locator('[data-test=\"continue\"]').click();\n    \n    // Verificar resumen\n    await expect(page).toHaveURL(/checkout-step-two/);\n    await expect(page.locator('.summary_info')).toBeVisible();\n    \n    // Finalizar compra\n    await page.locator('[data-test=\"finish\"]').click();\n    \n    // Verificar confirmación\n    await expect(page).toHaveURL(/checkout-complete/);\n    await expect(page.locator('.complete-header')).toHaveText('Thank you for your order!');\n  });\n\n  test('CP008 - Ordenamiento de productos por precio', async ({ page }) => {\n    // Login\n    await page.locator('[data-test=\"username\"]').fill('standard_user');\n    await page.locator('[data-test=\"password\"]').fill('secret_sauce');\n    await page.locator('[data-test=\"login-button\"]').click();\n    \n    // Obtener precios antes del ordenamiento\n    const preciosIniciales = await page.locator('.inventory_item_price').allTextContents();\n    \n    // Ordenar por precio (bajo a alto)\n    await page.locator('[data-test=\"product_sort_container\"]').selectOption('lohi');\n    \n    // Verificar que el ordenamiento cambió\n    const preciosOrdenados = await page.locator('.inventory_item_price').allTextContents();\n    expect(preciosOrdenados).not.toEqual(preciosIniciales);\n  });\n\n  test('CP009 - Logout exitoso', async ({ page }) => {\n    // Login\n    await page.locator('[data-test=\"username\"]').fill('standard_user');\n    await page.locator('[data-test=\"password\"]').fill('secret_sauce');\n    await page.locator('[data-test=\"login-button\"]').click();\n    \n    // Abrir menú hamburguesa\n    await page.locator('#react-burger-menu-btn').click();\n    \n    // Hacer logout\n    await page.locator('[data-test=\"logout-sidebar-link\"]').click();\n    \n    // Verificar regreso a login\n    await expect(page).toHaveURL('https://www.saucedemo.com/');\n    await expect(page.locator('[data-test=\"login-button\"]')).toBeVisible();\n  });\n\n  test('CP010 - Usuario bloqueado no puede hacer login', async ({ page }) => {\n    await page.locator('[data-test=\"username\"]').fill('locked_out_user');\n    await page.locator('[data-test=\"password\"]').fill('secret_sauce');\n    await page.locator('[data-test=\"login-button\"]').click();\n    \n    await expect(page.locator('[data-test=\"error\"]')).toBeVisible();\n    await expect(page.locator('[data-test=\"error\"]')).toContainText('Sorry, this user has been locked out');\n  });\n\n  test('CP011 - Continuar comprando desde el carrito', async ({ page }) => {\n    // Login y agregar producto\n    await page.locator('[data-test=\"username\"]').fill('standard_user');\n    await page.locator('[data-test=\"password\"]').fill('secret_sauce');\n    await page.locator('[data-test=\"login-button\"]').click();\n    await page.locator('[data-test=\"add-to-cart-sauce-labs-backpack\"]').click();\n    \n    // Ir al carrito\n    await page.locator('.shopping_cart_link').click();\n    \n    // Continuar comprando\n    await page.locator('[data-test=\"continue-shopping\"]').click();\n    \n    // Verificar regreso a productos\n    await expect(page).toHaveURL(/inventory/);\n    await expect(page.locator('.title')).toHaveText('Products');\n  });\n\n  test('CP012 - Validación campos obligatorios en checkout', async ({ page }) => {\n    // Login, agregar producto e ir a checkout\n    await page.locator('[data-test=\"username\"]').fill('standard_user');\n    await page.locator('[data-test=\"password\"]').fill('secret_sauce');\n    await page.locator('[data-test=\"login-button\"]').click();\n    await page.locator('[data-test=\"add-to-cart-sauce-labs-backpack\"]').click();\n    await page.locator('.shopping_cart_link').click();\n    await page.locator('[data-test=\"checkout\"]').click();\n    \n    // Intentar continuar sin llenar campos\n    await page.locator('[data-test=\"continue\"]').click();\n    \n    // Verificar error\n    await expect(page.locator('[data-test=\"error\"]')).toBeVisible();\n    await expect(page.locator('[data-test=\"error\"]')).toContainText('First Name is required');\n  });\n});\n```\n\nGUARDAR_CODIGO:saucedemo-tests.spec.ts"
    }
  ]
}
